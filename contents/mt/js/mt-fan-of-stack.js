// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['zepto', 'mt-base', 'text!../templates/mt-fan-of-stack.html', 'css!../css/mt-fan-of-stack.css', 'css!../css/app.css'], function($, MTBase, template) {
    var Interpolator, MTFanOfStack;
    Interpolator = (function() {

      Interpolator.name = 'Interpolator';

      function Interpolator(easing) {}

      return Interpolator;

    })();
    return MTFanOfStack = (function(_super) {
      var _tapOrClick;

      __extends(MTFanOfStack, _super);

      MTFanOfStack.name = 'MTFanOfStack';

      function MTFanOfStack() {
        return MTFanOfStack.__super__.constructor.apply(this, arguments);
      }

      _tapOrClick = __indexOf.call(window, 'ontouchstart') >= 0 ? 'tap' : 'click';

      MTFanOfStack.prototype.init = function() {
        return this.positionAbsolute();
      };

      MTFanOfStack.prototype.setupDOM = function() {
        this.el.append(template);
        return MTFanOfStack.__super__.setupDOM.apply(this, arguments);
      };

      MTFanOfStack.prototype.positionAbsolute = function() {
        var blue, centerItem, centerPos, containerLeft, containerTop, grey, style, styleText, vendor;
        style = document.createElement('style');
        style.type = 'text/css';
        document.head.appendChild(style);
        containerTop = this.el.get(0).offsetTop;
        containerLeft = this.el.get(0).offsetLeft;
        centerItem = this.el.find(".item").eq(4);
        styleText = "";
        centerPos = {
          left: centerItem.get(0).offsetLeft,
          top: centerItem.get(0).offsetTop
        };
        blue = "hsl(200, 100%, 50%)";
        grey = "hsl(200, 0%, 90%)";
        vendor = MTBase.vendor;
        this.el.find('.item').each(function(i, el) {
          var index, left, s, top;
          left = el.offsetLeft;
          top = el.offsetTop;
          index = i + 1;
          styleText += s = "\n#mt-fan-of-stack li:nth-child(" + index + "){\n  -" + vendor + "-transform: translate3d(" + left + "px, " + top + "px, 0);\n  -" + vendor + "-animation-name: unstack-" + index + ";\n  -" + vendor + "-animation-delay: " + (index * .04) + "s;\n  top: 0px; left: 0px;\n  z-index: " + (9 - i) + ";\n}\n\n#mt-fan-of-stack.unfold li:nth-of-type(" + index + "){\n  -" + vendor + "-animation-name: stack-" + index + ";\n  -" + vendor + "-animation-delay: " + (9 * .04 - 0.04 * index) + "s;\n}\n\n@-" + vendor + "-keyframes unstack-" + index + "{\n  0%{\n    -" + vendor + "-transform: translate3d(" + centerPos.left + "px, " + centerPos.top + "px, -300px) rotateY(0deg);\n    background-color: " + grey + ";\n  }\n  90%{\n    -" + vendor + "-transform: translate3d(" + left + "px, " + top + "px, 50px);\n    background-color: " + blue + ";\n  }\n  100%{\n    -" + vendor + "-transform: translate3d(" + left + "px, " + top + "px, 0);\n    background-color: " + blue + ";\n  }\n}\n\n@-" + vendor + "-keyframes stack-" + index + "{\n  0%{\n    -" + vendor + "-transform: translate3d(" + left + "px, " + top + "px, 0);\n    background-color: " + blue + ";\n  }\n  90%{\n    -" + vendor + "-transform: translate3d(" + centerPos.left + "px, " + centerPos.top + "px, -350px) rotateY(0deg);\n    background-color: " + grey + ";\n  }\n\n  100%{\n    -" + vendor + "-transform: translate3d(" + centerPos.left + "px, " + centerPos.top + "px, -" + (500 + index * 50) + "px) rotateY(0deg);\n    background-color: " + grey + ";\n  }\n}\n";
          return setTimeout(function() {
            el.style['margin'] = '0';
            return el.style['position'] = 'absolute';
          }, 0);
        });
        return style.innerHTML = styleText;
      };

      MTFanOfStack.prototype.attachEvents = function() {};

      return MTFanOfStack;

    })(MTBase);
  });

}).call(this);
